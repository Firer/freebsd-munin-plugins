#!/bin/sh
#
# Copyright (c) 2015 Babak Farrokhi.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# 10-Aug-2015 @farrokhi
# This script extracts netisr dispatcher statistics from "netstat -Q" 
# on FreeBSD and feeds to munin
#
# Magic markers:
#%# family=auto
#%# capabilities=autoconf suggest


SCRIPT_NAME=$(basename $0)
NETSTAT="/usr/bin/netstat"
STAT_TYPE=`echo $SCRIPT_NAME | sed -n s/netisr_//p`

STATFILE=`mktemp -t netisr`
${NETSTAT} -Q > ${STATFILE} 2>/dev/null

if [ $# -lt 1 ]; then

	if [ x${STAT_TYPE} == x ]; then
		exit 1
	fi

	cat ${STATFILE} | awk ' /  ('${STAT_TYPE}')  /{print "t"$2 "_"$3"_queued.value "$9 "\nt"$2 "_"$3"_handled.value "$10 "\nt"$2 "_"$3"_dropped.value "$8 "\nt"$2 "_"$3"_hdispatched.value "$7 "\nt"$2 "_"$3"_dispatched.value "$6}'

elif [ "$1" == "suggest" ]; then
	
	cat ${STATFILE} | awk '/---/{print $1}'	

elif [ "$1" == "autoconf" ]; then
   ${NETSTAT} -Q  >/dev/null 2>&1  && echo yes || echo no
   exit 0

elif [ "$1" == "config" ]; then

	if [ x${STAT_TYPE} == x ]; then
		exit 1
	fi

	echo "graph_title netisr dispatcher statistics for ${STAT_TYPE}"
	echo "graph_args -X 0 --lower-limit 0 --base 1000"
	echo "graph_vlabel packets / second"
	echo "graph_category isr"

	cat ${STATFILE} | awk ' /  ('${STAT_TYPE}')  /{print "t"$2 "_"$3"_queued.label Thread "$2 " Queued\nt"$2 "_"$3"_handled.label Thread "$2 " Handled\nt"$2 "_"$3"_dropped.label Thread "$2 " Dropped\nt"$2 "_"$3"_hdispatched.label Thread "$2 " Hybrid-Dispatched\nt"$2 "_"$3"_dispatched.label Thread "$2" Dispatched"}'
	cat ${STATFILE} | awk ' /  ('${STAT_TYPE}')  /{print "t"$2 "_"$3"_queued.type DERIVE\nt"$2 "_"$3"_handled.type DERIVE\nt"$2 "_"$3"_dropped.type DERIVE\nt"$2 "_"$3"_hdispatched.type DERIVE\nt"$2 "_"$3"_dispatched.type DERIVE"}'
	cat ${STATFILE} | awk ' /  ('${STAT_TYPE}')  /{print "t"$2 "_"$3"_queued.min 0\nt"$2 "_"$3"_handled.min 0\nt"$2 "_"$3"_dropped.min 0\nt"$2 "_"$3"_hdispatched.min 0\nt"$2 "_"$3"_dispatched.min 0"}'

fi

rm ${STATFILE}

